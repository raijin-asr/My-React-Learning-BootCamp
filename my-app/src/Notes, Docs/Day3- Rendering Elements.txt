--Elements are the smallest building blocks of React apps.
    Eg:const element = <h1>Hello, world</h1>;

--React elements are plain objects, and are cheap to create. React DOM takes care of updating the DOM to match the React elements
--Rendering an Element into the DOM:

    <div id="root"></div>

    const root = ReactDOM.createRoot(
    document.getElementById('root')
    );
    const element = <h1>Hello, world</h1>;
    root.render(element);

Updating the Rendered Element:
--React elements are immutable. Once you create an element, you canâ€™t change its children or attributes. An element is like a single frame in a movie: it represents the UI at a certain point in time.
--the only way to update the UI is to create a new element, and pass it to root.render().
--ticking clock example: It calls root.render() every second from a setInterval() callback.

    const root = ReactDOM.createRoot(
    document.getElementById('root')
    );

    function tick() {
    const element = (
        <div>
        <h1>Hello, world!</h1>
        <h2>It is {new Date().toLocaleTimeString()}.</h2>
        </div>
    );
    root.render(element);
    }

    setInterval(tick, 1000);

    --JSX Fragment:

    function App(){ //content wrapped in single div
        <div>
        --div content
        </div>
    }

    but -----
    function App(){ 
        <> //this is jsx fragment: solves the error
            //content of heading and div
            <h1>heading</h1> //this gives error
            <div>
            --div content
            </div>
        </>
    }

    
